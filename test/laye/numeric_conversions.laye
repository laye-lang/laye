// 0
// R %layec -S -emit-lyir -o - %s

// define layecc int_to_float() -> int64 {
// entry:
//   %0 = alloca int32
//   store %0, int32 10
//   %1 = alloca float32
//   store %1, float32 20.000000
//   %2 = load float32, %1
//   %3 = load int32, %0
//   %4 = sitofp float32, int32 %3
//   %5 = fcmp ogt float32 %2, %4
//   branch %5, %_bb1, %_bb2
// _bb1:
//   return int64 0
// _bb2:
//   return int64 1
// }
int int_to_float() {
    i32 a = 10;
    f32 b = 20;

    if (b > a) {
        return 0;
    }

    return 1;
}

// define exported ccc main() -> int64 {
// entry:
//   %0 = call layecc int64 @int_to_float()
//   return int64 %0
// }
int main() {
    return int_to_float();
}
