// 6
// R %layec --ir %s

foreign callconv(cdecl) i8 mut[*] malloc(uint count);

// * define exported ccc main() -> int64 {
// + entry:
// +   %0 = alloca int64[10]
// +   builtin @memset(ptr %0, int8 0, int64 80)
// +   %1 = mul int64 2, 8
// +   %2 = ptradd ptr %0, int64 %1
// +   store %2, int64 2
// +   %3 = alloca ptr
// +   %4 = call ccc ptr @malloc(int64 10)
// +   store %3, ptr %4
// +   %5 = load ptr, %3
// +   %6 = mul int64 6, 1
// +   %7 = ptradd ptr %5, int64 %6
// +   store %7, int8 4
// +   %8 = mul int64 2, 8
// +   %9 = ptradd ptr %0, int64 %8
// +   %10 = load int64, %9
// +   %11 = load ptr, %3
// +   %12 = mul int64 6, 1
// +   %13 = ptradd ptr %11, int64 %12
// +   %14 = load int8, %13
// +   %15 = sext int64, int8 %14
// +   %16 = add int64 %10, %15
// +   return int64 %16
// + }
int main() {
    int mut[10] arr;
    arr[2] = 2;

    i8 mut[*] buf = malloc(10);
    buf[6] = 4;

    return arr[2] + buf[6];
}
