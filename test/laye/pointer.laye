// 42
// R %layec -S -emit-lyir -o - %s

// * define exported ccc main() -> int64 {
// + entry:
// +  %0 = alloca int64
// +  store %0, int64 0
// +  %1 = alloca ptr
// +  store %1, ptr %0
// +  %2 = load ptr, %1
// +  store %2, int64 42
// +  %3 = load int64, %0
// +  return int64 %3
// + }
int main() {
    int mut value = 0;
    int mut* value_ptr = &value;
    *value_ptr = 42;
    return value;
}

// * define layecc shorter() -> int64 {
// + entry:
// +  %0 = alloca int64
// +  store %0, int64 42
// +  %1 = alloca ptr
// +  store %1, ptr %0
// +  %2 = load ptr, %1
// +  %3 = load int64, %2
// +  return int64 %3
// + }
int shorter() {
    int mut value = 42;
    int mut* value_ptr = &value;
    return *value_ptr;
}

// * define layecc other() -> int64 {
// + entry:
// +  %0 = alloca int64
// +  store %0, int64 0
// +  %1 = alloca ptr
// +  store %1, ptr %0
// +  %2 = load ptr, %1
// +  store %2, int64 42
// +  %3 = load int64, %0
// +  return int64 %3
// + }
int other() {
    int mut value = 0;
    int mut* value_ptr = &value;
    do { yield *value_ptr; } = 42;
    return value;
}
