// 20
// R %layec -S -emit-lyir -o %s.lyir %s && cat %s.lyir ; rm %s.lyir

// * define exported ccc main() -> int64 {
// + entry:
// +   %0 = alloca int64
// +   store %0, int64 10
// +   %1 = alloca int32
// +   %2 = load int64, %0
// +   %3 = trunc int32, int64 %2
// +   store %1, int32 %3
// +   %4 = alloca ptr
// +   store %4, ptr %0
// +   %5 = load int32, %1
// +   %6 = load ptr, %4
// +   %7 = load int32, %6
// +   %8 = add int32 %5, %7
// +   %9 = sext int64, int32 %8
// +   return int64 %9
// + }
int main() {
    i64 a = 10;
    i32 b = cast(i32) a;
    i32 *c = cast(i32*) &a;
    return b + *c;
}
