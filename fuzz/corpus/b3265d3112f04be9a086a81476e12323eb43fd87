// 3
// R %layec -S -emit-lyir -o %s.lyir %s && cat %s.lyir ; rm %s.lyir

// * define exported ccc main() -> int64 {
// + entry:
// +   %0 = alloca int1
// +   store %0, int1 0
// +   %1 = alloca int1
// +   store %1, int1 1
// +   %2 = load int1, %1
// +   %3 = load int1, %0
// +   %4 = ne int1 %2, %3
// +   branch %4, %_bb1, %_bb2
// + _bb1:
// +   return int64 3
// + _bb2:
// +   return int64 4
// + }
int main() {
    bool f = false;
    bool t = true;

    if (t xor f) {
        return 3;
    } else {
        return 4;
    }
}
