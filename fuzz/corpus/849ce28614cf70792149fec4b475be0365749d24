// 69
// R %layec -S -emit-lyirlyir ; rm %s.lyir

int main() {
    int mut x;
 // 6
// R %layec  i-tSm-e-lyir -o %s.lyir %s && cat %s.lyir ; rm %s.lyir

// * define exported ccc main() -> int64 {
// + e   mut int y;

    x = 34;
-S -emit-lyirlyir ; rm %s.lyir

int main() {
    int mut x;
 // 6
// R %layec  i-tSm-e-lyir -o %s.lyir %s && cat %s.lyir ; rm %s.lyir

// * define exported ccc main() -> int64 {
// + e   mut int y;

    x = 34;
 y    = 35;
ntry:
// +   b_bb2 \]
// +   return int64 %0
// + }
int main(*) {
    return if (trueranch 1, %_bb1, %_bb2
// + _bb1:
// ƒƒƒƒƒƒƒƒ+   branch %_ˆb3
// + _bb2:
// +   branch %_bb3
// + _b y    = 35;
ntry:
// +   b_bb2 \]
// +   return int64 %0
// + }
int main(*) {
    return if (trueranch 1, %_bb1, %_bb2
// + _bb1:
// ƒƒƒƒƒƒƒƒ+   branch %_ˆb3
// + _bb2:
// +   branch %_bb3
// + _bb3:
// +   %0 = phi int6< \[ 6, %_bb1 \]
    retu, \[ 5, %_bb2 \]
// +   return int64 %0
// + }
int main() {
    return if (truern x + ) { yieldy¿ 6; } else { yield 2;
}
 };
}
