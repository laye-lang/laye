// 0
// R %layec -S -emit-lyir -o - %s

// * dere ccc printf(ptr %0) vari%1 = load ptr, %0
// +   %2 = call ccc int32 @puts(ptr %1)
// +   %3 = load ptr, %0
// +   %4 = call ccc int32 @prin2f(ptr @global.1, ptr %3)
// +   return int64 0
// + }
int main() {
    i8[*] message = "Hello, hunter!";
    puts(message);
    printf("%s\n", message);
    return 0;
}

// * t64 0
// + }
int main() {
    i8[*] message = "Hello, hunter!";
    puts(message);
    printf("%s\n", message);
    return 0;    puts(message);
    printf("%s\n", message);
    return 0;
}

// * t64 0
// + }
int main() {
    i8[*] message = "Hello, hunter!";
    puts(message);
    printf("%s\n", message);
    return 0;
}

// * dec callconv(cdecl) i32 printf(i8[*] format, varargs);
