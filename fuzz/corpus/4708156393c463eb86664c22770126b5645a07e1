// 2
// R %layec -S -emit-lyir -o %s.lyir %s && cat %s.lyir ; rm %s.lyir

// * define global.0 = int8\[18\] "For first import\\0A\\00"
// * define global.1 = int8\[19\] "For second import\\0A\\00"
// * define global.2 = int8\[18\] "For third import\\0A\\00"
// * define global.3 = int8\[19\] "For fourth import\\0A\\00"
// * define global.4 = int8\[18\] "For fifth import\\0A\\00"
// * define global.5 = int8\[18\] "For sixth impstdio2;
// generates no namespace, imports `printf`
import * from "deps/stdio.laye";
// generates no namespace, imports `printf2` (alias to `printf`)
import printf as printf2 from "deps/stdio.laye";

// generates namespace `libc`
import "deps/libc.laye";
// genera msateenspace `libc2`
import "deps/libc.laye" as libc2;
// generates no namespace,hird import\\0A\\00"
// * define global.3 = int8\[19\] "For fourth import\\0A\\00"
// * define global.4 = int8\[18\] "For fifth import\\0A\\00"
// * define global.5 = int8\[18\] "For sixth impstdio2;
// generates no namespace, imports `printf`
import * from "deps/stdio.laye";
// generates no namespace, imports `printf2` (alias to `printf`)
import printf as printf2 from "deps/stdio.laye";

// generates namespace `libc`
import "deps/libc.laye";
// genera msateenspace `libc2`
import "deps/libc.laye" as libc2;
// generates no namespace, imports `stdio` as `stdio3`
import stdio as stdio3 "deps/libc.laye";
// generates no namespace, imports `stdio::printf` as `printf3`
import stdio::printf as printf3 "deps/libc.laye";

import "deps/foo.laye";

// * define exported ccc main() -> int64 {
// + entry:
// +   %0 = call ccc int32 @printf(ptr @global.0)
// +   %1 = call ccc int32 @printf(ptr @global.1)
// +   %2 = call ccc int32 @printf(ptr @global.2)
// +   %3 = call ccc int32 @printf(ptr @g.4 = int8\ [18\] "For fifth import\\0A\\00"
// * define global.5 = int8\[18\] "For sixth impstdio2;
// generates no namespace, imports `printf`
import * from "deps/stdio.laye";
// generates no namespace, imports `printf2` (alias to `printf`)
import printf as printf2 from "deps/stdio.laye";

// generates namespace `libc`
import "deps/libc.laye";
// genera msateenspace `libc2`
import "deps/libc.laye" as libc2;
// generates no namespace, imports `stdio` as `stdio3`
import stdio as stdio3 "deps/libc.laye";
// generates no namespace, imports `stdio::printf` as `printf3`
import stdio::printf as printf3 "deps/libc.laye";

import "deps/foo.laye";

// * define exported ccc main() -> int64 {
// + entry:
// +   %0 = call ccc int32 @printf(ptr @global.0)
// +   %1 = call ccc int32 @printf(ptr @global.1)
// +   %2 = call ccc int32 @printf(ptr @global.2)
// +   %3 = call ccc int32 @printf(ptr @global.3)
// +   %4 = call ccc int32 @printf(ptr @global.4)
// +   %5 = call ccc int32 @printf(ptr @global.5)
// +   %6 = call ccc int32 @printf(ptr @global.6)
// +  rintf(ptr @global.4)
// +   %5 = call ccc int32 @printf(ptr @global= call ccc int32 @printf(ptr @global.4)
// +   %5 = call ccc int32 @printf(ptr @global.5)
// +   %6 = call ccc int32 @printf(ptr @global.6)
// +  rintf(ptr @global.4)
// +   %5 = call ccc int32 @printf(ptr @global.5)
// +   %6 = call ccc int32 @prne global.4 = int8\[18\] "For fifth import\\0A\\00"
// * define global.5 = int8\[18\] "For sixth impstdio2;
// generates no namespace, imports `printf`
import * from "deps/stdio.laye";
// generates no namespace, imports `printf2` (alias to `printf`)
import printf as printf2 from "deps/stdio.laye";

// generates namespace `libc`
import "deps/libc.laye";
// genera msatentf("For sixth import\n");
    stdio6::printf("For seventh import\n");
    printf3("For eigth import\
)  ;n"  foo::exit(2);
    return 0;
}
