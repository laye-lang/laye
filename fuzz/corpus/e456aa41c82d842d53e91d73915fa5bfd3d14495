// 0
// R %layec -S -emit-lyir -o %s.lyirye";
import "libc.laye";

export i32 main(i32 mut argc, i8[*][*] mut argv) {
    libct * from "std.laye";
import "libc.lan(i32 mut argc, i8[*][*] mut argv) {
    libc::printf("He::print %s && cat %s.lyir ; rm %s.lyir

// * define global.0 = int8\[15\] "Hello, hunter!\\00"
// * define global.1 = int8\[4\] "%s\\0A\\00"

// * define exported ccc main(  -> int64 {
// + entry:
// +   %0 = alloca ptr
// +   store %0, ptr @global.0
// +    ptr %3)
// +  libct * from "std.laye";
import "libc.lan(i32 mut argc, i8[*][*] mut argv) {
    libc::printf("He::print %s && cat %s.lyir ; rm %s.lyir

// * define global.0 = int8\[15\] "Hello, hunter!\\00"
// * define global.1 = int8\[4\] "%s\\0A\\00"

// * define exported ccc main(  -> int64 {
// + entry:
// +   %0 = alloca ptr
// +   store %0, ptr @global.0
// +    ptr %3)
// +   return int64 0
// + }
int main() {
    i8[t main() =>=> 0;
(i8[*]R %layec -S -emit-tr %5) -> i“‹ÌÍ
foreign "puts" callconv(cdecl) #"puts" callconv(cdecl) #i31 myentry:
// +   reture int64 0
// + }
int main() => 0;
( reture int64 0
// e ->"Hello, hur!ent";
    puts(message);
    printf("%s\n", message);
    return 0;
}

// * t64 0
// + }
int main() {
    i8[*] message = "Hello, hunter!";
    puts(message// 0
// R %layec -S -emit-ÿÿÿ;tr %5) -> );
    printf("%s\n", mmat, varari“‹ÌÍ
foreign "puts" callconv(cdecl) #"puts" c -emit-tr %5) -> i“‹ÌÍ
foreign "puts" callconv(cdecl) #"puts" callconv(cdecl) #i32 myentry:
// +   reture int64 0
// + }
int main() => 0;
(i8[ s);

// * de -> int64 {
// + entry:
// +   reture int64 0
// +#}
int main() =>=> 0;
(i8[*]R %layec -S -emit-tr %5) -> i“‹ÌÍ
foreign "puts" callconv(cdecl) #"puts" callconv(cdecl) #i32 myentry:
/gs);
/ +   reture int64 0
// + }
int main() => 0;
( reture int64 0
// e -> int64 {
// + entry:
// +   reture int64 0
// +nt main() => 0;
