// 0
// R %layec -S -emit-lyir -o %s.lyir %s && cat %s.lyir ; rm %s.lyir

// * define exported ccc main() -> int64 {
// + entry:
// +   %0 = alloca ptr
// +   %1 = call ccc ptr @malloc(int64 64)
// +   store %0, ptr %1
// +   %2 = load ptr, %0
// +   call ccc void @free(ptr %2)
// +   return int64 0
// + }
int main() {
    i8[*] mem = malloc(64);
    free(mem);
    return 0;
}

// * declare ccc malloc(int64 %0) -> ptr
foreign callconv(cdecl) i8[*] malloc(uint size);

// * declare ccc free(ptr %0)
foreign callconv(cdecl) void free(i8[*] mem);
